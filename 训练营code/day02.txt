if 判断
如果.... 就.... 否则.....

语法：
if 判断表达式:
	执行语句1
else:
	执行语句2

注意事项：
1、if 和else 后必须加英文的冒号
2、if和else下的语句必须有一个tab键的缩进或者4个空格的缩进

s=float(input("请输入成绩:"))
if s>=60:
	print("及格")
else:
	print("不及格")


语法：
if 判断表达式1:
	执行语句1
elif 判断表达式2:
	执行语句2
...
else：
	执行语句3

注意：
1）和if与else注意事项相同
2）elif 可以有0-N个
3）else 只能有0-1个


s = float(input("请输入成绩:"))
if s >= 90:
    print("A")
elif s >= 80:
    print("B")
elif s >= 60:
    print("C")
else:
    print("不及格")

练习：
把12个月进行分季度
12 1 2 冬季
3 4 5 春季
6 7 8 夏季
9 10 11 秋季

n=int(input("请输入月份:"))
if 3<=n<=5:
    print("春季")
elif 6<=n<=8:
    print("夏季")
elif 9<=n<=11:
    print("秋季")
else:
    print("冬季")

思考：如果输入13 是什么情况？如何解决？
n=int(input("请输入月份:"))
if 1<=n<=12:
    print("输入没问题")
    if 3<=n<=5:
        print("春季")
    elif 6<=n<=8:
        print("夏季")
    elif 9<=n<=11:
        print("秋季")
    else:
        print("冬季")
else:
    print("输入错误")



if 嵌套
语法：
if 判断语句1:
	if 判断语句2：
		执行语句2
	elif 判断语句3：
		执行语句3
	...
	else：
		执行语句4
else:
	执行语句5


条件表达式
语法：
表达式1 if 判断语句 else 表达式2
如果判断语句为True 则执行表达1
否则执行表达式2

例如：
s=float(input("请输入成绩:"))
print("及格" if s>=60 else "不及格")

s = float(input("请输入成绩:"))
print(("及格" if s>=60 else "不及格") if 0<=s<=100 else "输入错误")


练习1：
输入年份判断是否为闰年（不使用and 和or ）
闰年：每4年一闰，每百年不闰或者每400年一闰

n=int(input("请输入年份:"))
if n>0:
    if n%4==0:
        if n%100!=0:
            print("闰年")
        elif n % 400 == 0:
            print("闰年")
        else:
            print("不是")
    else:
        print("不是")
else:
    print("输入错误")

方法二
n=int(input("请输入年份:"))
if n%4==0 and n%100!=0 or n%400==0:
    print("闰年")
else:
    print("不是闰年")


练习2：
上海地铁5站以内同意收费3元，每多一站多0.5元，
超过15站统一收费10元，输入站数查看需要交费多少元

n=int(input("请输入站数："))
if n<=5:
    print("3元")
elif 5<n<=15:
    print(3+(n-5)*0.5,"元")
else:
    print("10元")

练习3：
5000以下不交税
5000-8000 税率为3%
8000-15000 税率为8%
15000以上 税率为15%
输入工资计算需要交税多少元?

s=float(input("请输入工资："))
if s>=0:
    if s<=5000:
        print("不用交税")
    elif 5000<s<=8000:
        print((s-5000)*0.03,"元")
    elif 8000<s<=15000:
        print((s-8000)*0.08+(8000-5000)*0.03,"元")
    else:
        print((s-15000)*0.15+7000*0.08+3000*0.03,"元")
else:
    print("输入错误")


pass语句
空语句，无任何意义
if s>60:
	pass
else:
	print("补考")



and（并且）  or（或者）
True and True  --->  True   返回第二个True
True and False --->  False
True or True   --->  True
True or False  --->  True

False and False  ---> False  返回第一个False
False and True   ---> False
False or True   ----> True 
False or False  ----> False



--------------------------------------------------

字符串 str
str +
"abc" + "123"   ---> "abc123"
字符串加法相当于是把字符串进行拼接

字符串没有减法操作

str *
"abc" * "123" ---> 报错
"abc" * 3  ---> "abcabcabc"
字符串只能与数字相乘，得到的是数字倍数的字符串相拼接
字符串与负数相乘得到空字符串

字符串 没有除法操作

str += 
s="abc"
s=s+"123"  # s+="123"
s ---> "abc123"

str *=
s="a"
s=s*3  # s*=3
s --->'aaa'


字符串比较


ASCII编码
字符  ASCII码
0-9    48-57
A-Z    65-90
a-z    97-122

ord("单个字符") 返回字符所对应的ASCII编码的数字
chr(数字)   返回ASCII所对应的字符


'a' > 'A'
'K' < 'Q'

字符串比较是通过ASCII编码进行比较

字符串比较先第一个字符进行比较，如果第一个字符比较出
大小则大的字符串大，后面不在比较，如果第一个字符相等
则继续比较第二个字符，以此类推

"abc" > "baa"


in /  not in 
in 主要是运用与字符串 列表 字典等序列，
用与反应某个值在某个序列中

x="hello python"
if 'hl' in x:
	print("是")
else:
	print("NO")


索引 index
语法:字符串[整数值]
s="abcdef"
 012345


len() 返回序列的长度，元素的个数
s="abcdef"   len(s) #6

 a  b  c  d  e  f
 0  1  2  3  4  5
-6 -5 -4 -3 -2 -1

s[2]  #'c'  s[-4]
s[0]  #'a'  s[-6]

序列的索引是为了访问序列的一种方式分正向索引和反向索引
正向索引 从左到右从0开始每次加1，第一个0，第二个是1，
最后一个是len(s)-1

反向索引 从右到左 从-1 开始 依次加-1 ，第一个-1，第二个
是-2,最后一个是-len(s)


练习：
输入一串字符，打印出第一个字符，最后一个字符，
中间字符或者中间2个字符

s = input("请输入：")
print("第一个字符:", s[0], s[-len(s)])
print("最后字符:", s[-1], s[len(s) - 1])
if len(s) % 2 == 0:
    print("中间字符:", s[len(s) // 2 - 1], s[len(s) // 2])
else:
    print("中间字符:", s[len(s) // 2])



切片
作用：从字符串中提取对应的元素，组成新的字符串
语法：
字符串[开始索引:结束索引:步长(以多少长度为截取单位)]
包含开始 不包含结束
步长为正，从左到右切，开始索引为0可以不写，
索引为len(s)-1后 也可以不写，步长为1 可以不写
步长为正，从开始索引的左边下刀切，
从结束索引的左边下刀切结束

s='abcdef'
 a  b  c  d  e  f
 0  1  2  3  4  5
-6 -5 -4 -3 -2 -1

'bc'  s[1]+s[2]   s[1:3:1] --->s[1:3]
'bd'  s[1]+s[3]   s[1:4:2]
'ace' s[0]+s[2]+s[4]   s[0:5:2]--->s[:5:2]
'ef'  s[4]+s[5]   s[4:6:1]-->s[4::1] ---s[4:]

s="abcdef"
s[:5:3]  'ad'
s[:]     'abcdef'
s[2:5:3] 'c'
s[2:2]   ''



作业题：
1）求出下来切片的值
s="abcdefjh"
'bf' 
'dj'
s[0:100:2]
s[1:8:2]

2)a="hello python"
b="隔壁老王"
c="去你家学习"
打印出"hello 去老王家学习python"






